% Generated by roxygen2 (4.0.2): do not edit by hand
\name{get_matches}
\alias{get_matches}
\title{Find matched controls for a set of cases}
\usage{
get_matches(cases, control_pool, n_controls, match_vars, extra_vars, id_var,
  extra_conditions, cores = 6, replace = TRUE, track = TRUE,
  tracker = function(case_num) ".")
}
\arguments{
\item{cases}{dataframe of cases}

\item{control_pool}{dataframe of potential controls to be used for matching}

\item{n_controls}{number of controls to match to each case}

\item{match_vars}{character vector of variables in the dataframes to be used to perform the
matching}

\item{extra_vars}{character vector of other variables to be used in the matching to define other
conditions}

\item{id_var}{the variable used to identify an individual case}

\item{extra_conditions}{a character vector of length 1 defining further restrictions on matching}

\item{cores}{number of cpu cores to be used by multicore (windows users should leave set to 1)}

\item{replace}{logical should sampling of controls for each case be done with replacement? (see
details)}

\item{track}{logical should a dot be printed to std.out for each case?}

\item{tracker}{function to track progress of the function (See details)}
}
\description{
This function will provide a set of matched controls for a given set of cases.
}
\details{
Setting replace == FALSE means that the matched cases are removed from the control pool
after each case has been matched.  This makes this method not thread safe and so will only
run on a single core (and more slowly).
Setting replace == TRUE is thread safe as the same controls can be used for more than one case.
See Richardson (2004) Occup Environ Med 2004;61:e59 doi:10.1136/oem.2004.014472 for a description
of IDS matching.
To track number of cases, set \code{tracker = function() paste0(case_num, ",")}
}

